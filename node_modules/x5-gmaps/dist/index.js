!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports["x5-gmaps"]=e():t["x5-gmaps"]=e()}(window,(function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)i.d(n,o,function(e){return t[e]}.bind(null,o));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=3)}([function(t,e,i){"use strict";var n=i(2),o=i.n(n)()((function(t){return t[1]}));o.push([t.i,".gmaps-map{position:relative;width:100%;height:100%}.gmaps-spinner{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.gmaps-spinner::after{content:'';display:inline-block;width:200px;height:200px;border:20px solid #ccc;border-radius:50%;border-top-color:#aaa;animation:gmaps-spin 1s ease-in-out infinite}.gmaps-error{position:absolute;top:50%;left:5%;width:90%;transform:translateY(-50%);color:#af0000;font-size:24px}@keyframes gmaps-spin{to{transform:rotate(360deg)}}.gmaps-popup-bubble{border-radius:5px;box-shadow:0px 3px 10px 1px rgba(0,0,0,0.5);color:#444;cursor:pointer;font-family:sans-serif;left:0;overflow-y:auto;padding:5px;position:absolute;top:0;transform:translate(-50%, -100%)}.gmaps-popup-bubble-anchor{bottom:8px;left:0;position:absolute;width:100%}.gmaps-popup-bubble-anchor::after{border-left:6px solid transparent;border-right:6px solid transparent;border-top:8px solid;border-top-color:inherit !important;content:'';height:0;left:0;position:absolute;top:-1px;transform:translate(-50%, 0);width:0}.gmaps-popup-container{cursor:auto;height:0;position:absolute;width:100%}\n",""]),e.a=o},function(t,e,i){"use strict";var n,o=function(){return void 0===n&&(n=Boolean(window&&document&&document.all&&!window.atob)),n},r=function(){var t={};return function(e){if(void 0===t[e]){var i=document.querySelector(e);if(window.HTMLIFrameElement&&i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(t){i=null}t[e]=i}return t[e]}}(),s=[];function a(t){for(var e=-1,i=0;i<s.length;i++)if(s[i].identifier===t){e=i;break}return e}function l(t,e){for(var i={},n=[],o=0;o<t.length;o++){var r=t[o],l=e.base?r[0]+e.base:r[0],d=i[l]||0,h="".concat(l," ").concat(d);i[l]=d+1;var p=a(h),c={css:r[1],media:r[2],sourceMap:r[3]};-1!==p?(s[p].references++,s[p].updater(c)):s.push({identifier:h,updater:f(c,e),references:1}),n.push(h)}return n}function d(t){var e=document.createElement("style"),n=t.attributes||{};if(void 0===n.nonce){var o=i.nc;o&&(n.nonce=o)}if(Object.keys(n).forEach((function(t){e.setAttribute(t,n[t])})),"function"==typeof t.insert)t.insert(e);else{var s=r(t.insert||"head");if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(e)}return e}var h,p=(h=[],function(t,e){return h[t]=e,h.filter(Boolean).join("\n")});function c(t,e,i,n){var o=i?"":n.media?"@media ".concat(n.media," {").concat(n.css,"}"):n.css;if(t.styleSheet)t.styleSheet.cssText=p(e,o);else{var r=document.createTextNode(o),s=t.childNodes;s[e]&&t.removeChild(s[e]),s.length?t.insertBefore(r,s[e]):t.appendChild(r)}}function u(t,e,i){var n=i.css,o=i.media,r=i.sourceMap;if(o?t.setAttribute("media",o):t.removeAttribute("media"),r&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}var g=null,m=0;function f(t,e){var i,n,o;if(e.singleton){var r=m++;i=g||(g=d(e)),n=c.bind(null,i,r,!1),o=c.bind(null,i,r,!0)}else i=d(e),n=u.bind(null,i,e),o=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(i)};return n(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;n(t=e)}else o()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=o());var i=l(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var n=0;n<i.length;n++){var o=a(i[n]);s[o].references--}for(var r=l(t,e),d=0;d<i.length;d++){var h=a(i[d]);0===s[h].references&&(s[h].updater(),s.splice(h,1))}i=r}}}},function(t,e,i){"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var i=t(e);return e[2]?"@media ".concat(e[2]," {").concat(i,"}"):i})).join("")},e.i=function(t,i,n){"string"==typeof t&&(t=[[null,t,""]]);var o={};if(n)for(var r=0;r<this.length;r++){var s=this[r][0];null!=s&&(o[s]=!0)}for(var a=0;a<t.length;a++){var l=[].concat(t[a]);n&&o[l[0]]||(i&&(l[2]?l[2]="".concat(i," and ").concat(l[2]):l[2]=i),e.push(l))}},e}},function(t,e,i){"use strict";i.r(e),i.d(e,"gmaps",(function(){return a})),i.d(e,"gmapsCircle",(function(){return p})),i.d(e,"gmapsHeatmap",(function(){return u})),i.d(e,"gmapsInfoWindow",(function(){return f})),i.d(e,"gmapsMap",(function(){return v})),i.d(e,"gmapsMarker",(function(){return w})),i.d(e,"gmapsPolyline",(function(){return _})),i.d(e,"gmapsPolygon",(function(){return x})),i.d(e,"gmapsPopup",(function(){return E})),i.d(e,"gmapsRectangle",(function(){return N}));const n=()=>!!window.google&&!!window.google.maps;let o=!1;const r=[];window.x5GMapsOnLoad=()=>r.forEach(t=>t.resolve(window.google.maps));const s=t=>r.forEach(e=>e.reject(t)),a=()=>{if(n())return Promise.resolve(window.google.maps);if(!o)throw new Error("x5GMaps :: Plugin not initialised");return new Promise((t,e)=>r.push({resolve:t,reject:e}))},l=t=>{if(n())throw new Error("x5GMaps :: Plugin already initialised");o=!0,(t=>{const e=document.createElement("script");e.type="text/javascript",e.src=(t=>`https://maps.googleapis.com/maps/api/js?${t}&callback=x5GMapsOnLoad`)(t),e.onError=s(new Error("Error loading script")),document.querySelector("head").appendChild(e)})((t=>Object.keys(t).map(e=>{const i=Array.isArray(t[e])?t[e].map(t=>encodeURIComponent(t)).join(","):encodeURIComponent(t[e]);return`${encodeURIComponent(e)}=${i}`}).join("&"))(t)),setTimeout(()=>{n()||s(new Error("Loading timed out"))},5e3)};function d(t,e,i,n,o,r,s,a){var l,d="function"==typeof t?t.options:t;if(e&&(d.render=e,d.staticRenderFns=i,d._compiled=!0),n&&(d.functional=!0),r&&(d._scopeId="data-v-"+r),s?(l=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),o&&o.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(s)},d._ssrRegister=l):o&&(l=a?function(){o.call(this,(d.functional?this.parent:this).$root.$options.shadowRoot)}:o),l)if(d.functional){d._injectStyles=l;var h=d.render;d.render=function(t,e){return l.call(e),h(t,e)}}else{var p=d.beforeCreate;d.beforeCreate=p?[].concat(p,l):[l]}return{exports:t,options:d}}var h=d({name:"gmapsCircle",inject:["getMap","handleError"],props:{center:{type:Object,required:!0},clickable:{type:Boolean,default:!0},draggable:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},fillColor:{type:String,default:"black"},fillOpacity:{type:[String,Number],default:.3},radius:{type:[String,Number],required:!0},strokeColor:{type:String,default:"black"},strokeOpacity:{type:[String,Number],default:1},strokePosition:{type:[String,Number],default:0},strokeWeight:{type:[String,Number],default:3},visible:{type:Boolean,default:!0},zIndex:{type:[String,Number],default:0}},data:t=>({circle:null,tempCenter:t.center,tempRadius:t.radius}),computed:{_options:t=>({center:t.center,clickable:t.clickable,draggable:t.draggable,editable:t.editable,fillColor:t.fillColor,fillOpacity:+t.fillOpacity,radius:+t.radius,strokeColor:t.strokeColor,strokeOpacity:+t.strokeOpacity,strokePosition:+t.strokePosition,strokeWeight:+t.strokeWeight,visible:t.visible,zIndex:t.zIndex})},methods:{changedCenter(){const t=this.tempCenter||-1,e=this.circle.getCenter().toJSON();(Math.abs(e.lat-t.lat)>1e-4||Math.abs(e.lng-t.lng)>1e-4)&&(this.tempCenter=e,this.$emit("center-changed",e),this.$emit("centerChanged",e))},changedRadius(){const t=this.tempRadius||-1,e=this.circle.getRadius();Math.abs(e-t)>1&&(this.tempRadius=e,this.$emit("radius-changed",e),this.$emit("radiusChanged",e))}},mounted(){a().then(t=>{this.circle=new t.Circle({map:this.getMap(),options:{...this._options}})}).then(()=>this.circle.addListener("center_changed",()=>this.changedCenter())).then(()=>this.circle.addListener("radius_changed",()=>this.changedRadius())).then(()=>this.circle.addListener("click",t=>this.$emit("click",t))).then(()=>this.circle.addListener("dblclick",t=>this.$emit("double-click",t))).then(()=>this.circle.addListener("drag",t=>this.$emit("drag",t.latLng.toJSON()))).then(()=>this.circle.addListener("dragend",t=>this.$emit("drag-end",t.latLng.toJSON()))).then(()=>this.circle.addListener("dragstart",t=>this.$emit("drag-start",t.latLng.toJSON()))).then(()=>this.circle.addListener("mouseover",t=>this.$emit("mouseover",t))).then(()=>this.circle.addListener("rightclick",t=>this.$emit("right-click",t))).then(()=>this.circle.addListener("dblclick",t=>this.$emit("doubleClick",t))).then(()=>this.circle.addListener("dragend",t=>this.$emit("dragEnd",t.latLng.toJSON()))).then(()=>this.circle.addListener("dragstart",t=>this.$emit("dragStart",t.latLng.toJSON()))).then(()=>this.circle.addListener("rightclick",t=>this.$emit("rightClick",t))).catch(t=>this.handleError(t))},watch:{_options(t){this.circle.setOptions(t)}},beforeDestroy(){this.circle&&this.circle.setMap(null)},render:()=>null},void 0,void 0,!1,null,null,null);h.options.__file="src/components/Circle.vue";var p=h.exports,c=d({name:"gmapsHeatmap",inject:["getMap","handleError"],props:{colors:{type:Array,default:null},dissipating:{type:Boolean,default:!0},items:{type:Array,required:!0},maxIntensity:{type:[String,Number],default:null},opacity:{type:[String,Number],default:null},radius:{type:[String,Number],default:null},weightProp:{type:String,default:null}},data:()=>({heatmap:null}),computed:{_options(){const t={dissipating:this.dissipating};return this.colors&&(t.gradient=["rgba(0,0,0,0)",...this.colors]),this.maxIntensity&&(t.maxIntensity=+this.maxIntensity),this.opacity&&(t.opacity=+this.opacity),this.radius&&(t.radius=+this.radius),t}},methods:{getData(t){return this.weightProp?this.items.map(e=>({location:new t.LatLng(e.lat,e.lng),weight:e[this.weightProp]})):this.items.map(e=>new t.LatLng(e.lat,e.lng))},updateData(){a().then(t=>this.heatmap.setData(this.getData(t))).catch(t=>this.handleError(t))}},mounted(){a().then(t=>{this.heatmap=new t.visualization.HeatmapLayer({map:this.getMap(),data:this.getData(t),options:{...this._options}})}).catch(t=>this.handleError(t))},watch:{items(){this.updateData()},weightProp(){this.updateData()},_options(t){this.heatmap.setOptions(t)}},beforeDestroy(){this.heatmap&&this.heatmap.setMap(null)},render:()=>null},void 0,void 0,!1,null,null,null);c.options.__file="src/components/Heatmap.vue";var u=c.exports,g=function(){var t=this.$createElement;return(this._self._c||t)("div",[this._t("default")],2)};g._withStripped=!0;var m=d({name:"gmapsInfoWindow",inject:["getMap","handleError"],props:{options:{type:Object,required:!0}},data:()=>({infoW:null}),methods:{open(){this.infoW.open(this.getMap())}},watch:{options:{deep:!0,handler(){this.infoW.setOptions(this.options)}}},mounted(){if(!this.options.position)return this.handleError("InfoWindow options require a position property.");a().then(t=>this.infoW=new t.InfoWindow({content:this.$el,...this.options})).then(()=>this.infoW.addListener("closeclick",()=>this.$emit("closed"))).then(()=>this.open()).catch(t=>this.handleError(t))},beforeDestroy(){this.infoW&&this.infoW.close()},render:()=>null},g,[],!1,null,null,null);m.options.__file="src/components/InfoWindow.vue";var f=m.exports,y=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"gmaps-map"},[t.error?[t._t("error",[i("span",{staticClass:"gmaps-error"},[t._v("Error: "+t._s(t.error))])],{error:t.error})]:t.loading?[t._t("loading",[i("span",{staticClass:"gmaps-spinner"})])]:t._e(),t._v(" "),i("div",{ref:"gmap",staticClass:"gmaps-map"},[t.error||t.loading||!t.map?t._e():t._t("default",null,{map:t.map})],2)],2)};y._withStripped=!0;const b={center:{lat:-27.5,lng:153},zoom:12};var k=d({name:"gmapsMap",provide:function(){return{getMap:()=>this.getMap(),handleError:t=>this.handleError(t)}},props:{options:{type:Object,default:()=>({})}},data:()=>({error:null,loading:!0,map:null,GMaps:null}),methods:{handleError(t){this.error=t.message?t.message:t},getMap(){return this.map}},watch:{options:{deep:!0,handler(t){this.map&&this.map.setOptions(t)}}},mounted(){a().then(t=>this.GMaps=t).then(()=>this.map=new this.GMaps.Map(this.$refs.gmap,{...b,...this.options})).then(()=>this.$emit("mounted",this.map)).then(()=>this.map.addListener("bounds_changed",()=>this.$emit("bounds-changed",this.map.getBounds()))).then(()=>this.map.addListener("center_changed",()=>this.$emit("center-changed",this.map.getCenter()))).then(()=>this.map.addListener("click",t=>this.$emit("click",t))).then(()=>this.map.addListener("dblclick",t=>this.$emit("double-click",t))).then(()=>this.map.addListener("rightclick",t=>this.$emit("right-click",t))).then(()=>this.map.addListener("zoom_changed",()=>this.$emit("zoom-changed",this.map.getZoom()))).then(()=>this.map.addListener("bounds_changed",()=>this.$emit("boundsChanged",this.map.getBounds()))).then(()=>this.map.addListener("center_changed",()=>this.$emit("centerChanged",this.map.getCenter()))).then(()=>this.map.addListener("dblclick",t=>this.$emit("doubleClick",t))).then(()=>this.map.addListener("rightclick",t=>this.$emit("rightClick",t))).then(()=>this.map.addListener("zoom_changed",()=>this.$emit("zoomChanged",this.map.getZoom()))).catch(t=>this.handleError(t)).finally(()=>setTimeout(()=>this.loading=!1,100))},beforeDestroy(){try{this.GMaps.event.clearInstanceListeners(this.map)}catch(t){this.handleError(t)}}},y,[],!1,null,null,null);k.options.__file="src/components/Map.vue";var v=k.exports,L=d({name:"gmapsMarker",inject:["getMap","handleError"],props:{icon:{type:[String,Object],default:null},label:{type:[String,Object],default:null},opacity:{type:[String,Number],default:null},options:{type:Object,default:()=>({})},position:{type:Object,default:null},title:{type:String,default:null},visible:{type:Boolean,default:null},zIndex:{type:[String,Number],default:null}},data:()=>({marker:null,GMaps:null}),computed:{_options(){const t={...this.options};return this.icon&&(t.icon=this.icon),this.label&&(t.label=this.label),this.opacity&&(t.opacity=this.opacity),this.position&&(t.position=this.position),this.title&&(t.title=this.title),this.visible&&(t.visible=this.visible),this.zIndex&&(t.zIndex=+this.zIndex),t}},methods:{changedPosition(){const t=this.options.position;if(!t)return;const e=this.marker.getPosition().toJSON();return(Math.abs(e.lat-t.lat)>.001||Math.abs(e.lng-t.lng)>.001)&&e}},mounted(){if(!this.position&&!this.options.position)throw new Error("x5-gmaps: A position is required by every marker. Set this as either a position prop, or a position property of the options prop.");a().then(t=>this.GMaps=t).then(()=>this.marker=new this.GMaps.Marker({map:this.getMap(),...this._options})).then(()=>this.marker.addListener("position_changed",()=>{const t=this.changedPosition();t&&(this.$emit("move",t),this.$emit("position-changed",t))})).then(()=>this.marker.addListener("click",t=>this.$emit("click",t))).then(()=>this.marker.addListener("dblclick",t=>this.$emit("double-click",t))).then(()=>this.marker.addListener("rightclick",t=>this.$emit("right-click",t))).then(()=>this.marker.addListener("mouseover",t=>this.$emit("mouseover",t))).then(()=>this.marker.addListener("mouseout",t=>this.$emit("mouseout",t))).then(()=>this.marker.addListener("dblclick",t=>this.$emit("doubleClick",t))).then(()=>this.marker.addListener("rightclick",t=>this.$emit("rightClick",t))).catch(t=>this.handleError(t))},watch:{_options(t){this.marker.setOptions(t)}},beforeDestroy(){try{this.marker.setMap(null),this.GMaps.event.clearInstanceListeners(this.marker)}catch(t){this.handleError(t)}},render:()=>null},void 0,void 0,!1,null,null,null);L.options.__file="src/components/Marker.vue";var w=L.exports,$=d({name:"gmapsPolyline",inject:["getMap","handleError"],props:{clickable:{type:Boolean,default:!0},draggable:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},geodesic:{type:Boolean,default:!1},icons:{type:Array,default:()=>[]},path:{type:Array,required:!0},strokeColor:{type:String,default:"black"},strokeOpacity:{type:[String,Number],default:1},strokeWeight:{type:[String,Number],default:3},visible:{type:Boolean,default:!0},zIndex:{type:[String,Number],default:0}},data:()=>({polyline:null}),computed:{_options:t=>({clickable:t.clickable,draggable:t.draggable,editable:t.editable,geodesic:t.geodesic,icons:t.icons,path:t.path,strokeColor:t.strokeColor,strokeOpacity:+t.strokeOpacity,strokeWeight:+t.strokeWeight,visible:t.visible,zIndex:t.zIndex})},methods:{changedPath(){if(this.polyline.getEditable()){const t=this.polyline.getPath().getArray().map(t=>t.toJSON());this.$emit("path-changed",t),this.$emit("pathChanged",t)}}},mounted(){a().then(t=>{this.polyline=new t.Polyline({map:this.getMap(),options:{...this._options}})}).then(()=>this.polyline.addListener("click",t=>this.$emit("click",t))).then(()=>this.polyline.addListener("dblclick",t=>this.$emit("double-click",t))).then(()=>this.polyline.addListener("drag",t=>this.$emit("drag",t))).then(()=>this.polyline.addListener("dragend",t=>this.$emit("drag-end",t))).then(()=>this.polyline.addListener("dragstart",t=>this.$emit("drag-start",t))).then(()=>this.polyline.addListener("mouseover",t=>this.$emit("mouseover",t))).then(()=>this.polyline.addListener("rightclick",t=>this.$emit("right-click",t))).then(()=>this.polyline.addListener("mouseup",()=>this.changedPath())).then(()=>this.polyline.getPath().addListener("remove_at",()=>this.changedPath())).then(()=>this.polyline.addListener("dblclick",t=>this.$emit("doubleClick",t))).then(()=>this.polyline.addListener("dragend",t=>this.$emit("dragEnd",t))).then(()=>this.polyline.addListener("dragstart",t=>this.$emit("dragStart",t))).then(()=>this.polyline.addListener("rightclick",t=>this.$emit("rightClick",t))).catch(t=>this.handleError(t))},watch:{_options(t){this.polyline.setOptions(t)}},beforeDestroy(){this.polyline&&this.polyline.setMap(null)},render:()=>null},void 0,void 0,!1,null,null,null);$.options.__file="src/components/Polyline.vue";var _=$.exports,C=d({name:"gmapsPolygon",inject:["getMap","handleError"],props:{clickable:{type:Boolean,default:!0},draggable:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},fillColor:{type:String,default:"black"},fillOpacity:{type:[String,Number],default:.3},geodesic:{type:Boolean,default:!1},path:{type:Array,required:!0},strokeColor:{type:String,default:"black"},strokeOpacity:{type:[String,Number],default:1},strokePosition:{type:[String,Number],default:0},strokeWeight:{type:[String,Number],default:3},visible:{type:Boolean,default:!0},zIndex:{type:[String,Number],default:0}},data:()=>({polygon:null}),computed:{_options:t=>({clickable:t.clickable,draggable:t.draggable,editable:t.editable,fillColor:t.fillColor,fillOpacity:+t.fillOpacity,geodesic:t.geodesic,path:t.path,strokeColor:t.strokeColor,strokeOpacity:+t.strokeOpacity,strokePosition:+t.strokePosition,strokeWeight:+t.strokeWeight,visible:t.visible,zIndex:t.zIndex})},methods:{changedPath(){if(this.polygon.getEditable()){const t=this.polygon.getPath().getArray().map(t=>t.toJSON());this.polygon.setPath(t),this.$emit("path-changed",t),this.$emit("pathChanged",t)}}},mounted(){a().then(t=>{this.polygon=new t.Polygon({map:this.getMap(),options:{...this._options}})}).then(()=>this.polygon.addListener("click",t=>this.$emit("click",t))).then(()=>this.polygon.addListener("dblclick",t=>this.$emit("double-click",t))).then(()=>this.polygon.addListener("drag",t=>this.$emit("drag",t))).then(()=>this.polygon.addListener("dragend",t=>this.$emit("drag-end",t))).then(()=>this.polygon.addListener("dragstart",t=>this.$emit("drag-start",t))).then(()=>this.polygon.addListener("rightclick",t=>this.$emit("right-click",t))).then(()=>this.polygon.addListener("mouseup",()=>this.changedPath())).then(()=>this.polygon.getPath().addListener("remove_at",()=>this.changedPath())).then(()=>this.polygon.addListener("dblclick",t=>this.$emit("doubleClick",t))).then(()=>this.polygon.addListener("dragend",t=>this.$emit("dragEnd",t))).then(()=>this.polygon.addListener("dragstart",t=>this.$emit("dragStart",t))).then(()=>this.polygon.addListener("rightclick",t=>this.$emit("rightClick",t))).catch(t=>this.handleError(t))},watch:{_options(t){this.polygon.setOptions(t)}},beforeDestroy(){this.polygon&&this.polygon.setMap(null)},render:()=>null},void 0,void 0,!1,null,null,null);C.options.__file="src/components/Polygon.vue";var x=C.exports,S=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"gmaps-popup-container",on:{click:function(e){return e.preventDefault(),t.$emit("click")}}},[i("div",{staticClass:"gmaps-popup-bubble-anchor",style:"color: "+t.background+";"},[i("div",{staticClass:"gmaps-popup-bubble",style:"background: "+t.background+"; maxWidth:"+t.width+"; maxHeight:"+t.height+";"},[t._t("default")],2)])])};S._withStripped=!0;var M=()=>{function t(t,e){this.position=new window.google.maps.LatLng(t.lat,t.lng),this.content=e,window.google.maps.OverlayView.preventMapHitsAndGesturesFrom(e)}return t.prototype=Object.create(window.google.maps.OverlayView.prototype),t.prototype.onAdd=function(){this.getPanes().floatPane.appendChild(this.content)},t.prototype.onRemove=function(){this.content.parentElement&&this.content.parentElement.removeChild(this.content)},t.prototype.draw=function(){const t=this.getProjection().fromLatLngToDivPixel(this.position);this.content.style.left=t.x+"px",this.content.style.top=t.y+"px"},t.prototype.setPosition=function(t){this.position=new window.google.maps.LatLng(t.lat,t.lng),this.draw()},t},O=d({name:"gmapsPopup",inject:["getMap","handleError"],props:{background:{type:String,default:"#EEEEEE"},width:{type:String,default:"200px"},height:{type:String,default:"60px"},position:{type:Object,required:!0}},data:()=>({popup:null}),watch:{position(t){t&&this.popup.setPosition(t)}},mounted(){const t=M();a().then(e=>this.popup=new t(this.position,this.$el,e)).then(()=>this.popup.setMap(this.getMap())).catch(t=>this.handleError(t))},beforeDestroy(){this.popup&&this.popup.setMap(null)}},S,[],!1,null,null,null);O.options.__file="src/components/Popup.vue";var E=O.exports,P=d({name:"gmapsRectangle",inject:["getMap","handleError"],props:{bounds:{type:Object,required:!0},clickable:{type:Boolean,default:!0},draggable:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},fillColor:{type:String,default:"black"},fillOpacity:{type:[String,Number],default:.3},strokeColor:{type:String,default:"black"},strokeOpacity:{type:[String,Number],default:1},strokePosition:{type:[String,Number],default:0},strokeWeight:{type:[String,Number],default:3},visible:{type:Boolean,default:!0},zIndex:{type:[String,Number],default:0}},data:t=>({rectangle:null,tempBounds:t.bounds}),computed:{_options:t=>({bounds:t.bounds,clickable:t.clickable,draggable:t.draggable,editable:t.editable,fillColor:t.fillColor,fillOpacity:+t.fillOpacity,strokeColor:t.strokeColor,strokeOpacity:+t.strokeOpacity,strokePosition:+t.strokePosition,strokeWeight:+t.strokeWeight,visible:t.visible,zIndex:t.zIndex})},methods:{changedBounds(){const t=this.tempBounds||{north:-1,south:-1,east:-1,west:-1},e=this.rectangle.getBounds().toJSON();(Math.abs(e.north-t.north)>.001||Math.abs(e.south-t.south)>.001||Math.abs(e.east-t.east)>.001||Math.abs(e.west-t.west)>.001)&&(this.tempBounds=e,this.$emit("bounds-changed",e),this.$emit("boundsChanged",e))}},mounted(){a().then(t=>{this.rectangle=new t.Rectangle({map:this.getMap(),options:{...this._options}})}).then(()=>this.rectangle.addListener("bounds_changed",()=>this.changedBounds())).then(()=>this.rectangle.addListener("click",t=>this.$emit("click",t))).then(()=>this.rectangle.addListener("dblclick",t=>this.$emit("double-click",t))).then(()=>this.rectangle.addListener("drag",t=>this.$emit("drag",t.latLng.toJSON()))).then(()=>this.rectangle.addListener("dragend",t=>this.$emit("drag-end",t.latLng.toJSON()))).then(()=>this.rectangle.addListener("dragstart",t=>this.$emit("drag-start",t.latLng.toJSON()))).then(()=>this.rectangle.addListener("mouseover",t=>this.$emit("mouseover",t))).then(()=>this.rectangle.addListener("rightclick",t=>this.$emit("right-click",t))).then(()=>this.rectangle.addListener("dblclick",t=>this.$emit("doubleClick",t))).then(()=>this.rectangle.addListener("dragend",t=>this.$emit("dragEnd",t))).then(()=>this.rectangle.addListener("dragstart",t=>this.$emit("dragStart",t))).then(()=>this.rectangle.addListener("rightclick",t=>this.$emit("rightClick",t))).catch(t=>this.handleError(t))},watch:{_options(t){this.rectangle.setOptions(t)}},beforeDestroy(){this.rectangle&&this.rectangle.setMap(null)},render:()=>null},void 0,void 0,!1,null,null,null);P.options.__file="src/components/Rectangle.vue";var N=P.exports,j=i(1),I=i.n(j),B=i(0),W={insert:"head",singleton:!1};I()(B.a,W),B.a.locals;e.default=(t,e)=>{if(!e)throw new Error("x5-gmaps :: (Google API) 'key' is required for plugin install.");l("string"==typeof e?{key:e}:e),t.prototype.$GMaps=()=>a()}}])}));